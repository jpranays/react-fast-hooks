"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[144],{7266:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>i,default:()=>l,frontMatter:()=>c,metadata:()=>r,toc:()=>d});var s=n(4848),o=n(8453);const c={id:"useUpdateEffect",title:"useUpdateEffect",sidebar_label:"useUpdateEffect"},i=void 0,r={id:"hooks/useUpdateEffect",title:"useUpdateEffect",description:"Hook that runs an effect only when the component updates, skipping the initial render.",source:"@site/docs/hooks/useUpdateEffect.md",sourceDirName:"hooks",slug:"/hooks/useUpdateEffect",permalink:"/react-fast-hooks/docs/hooks/useUpdateEffect",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"useUpdateEffect",title:"useUpdateEffect",sidebar_label:"useUpdateEffect"},sidebar:"docsSidebar",previous:{title:"useTouchSwipe",permalink:"/react-fast-hooks/docs/hooks/useTouchSwipe"},next:{title:"useVibration",permalink:"/react-fast-hooks/docs/hooks/useVibration"}},a={},d=[{value:"Usage",id:"usage",level:3},{value:"API",id:"api",level:3}];function u(e){const t={code:"code",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"Hook that runs an effect only when the component updates, skipping the initial render."}),"\n",(0,s.jsx)(t.h3,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-jsx",metastring:"live",live:!0,children:'function App() {\n\tconst [count, setCount] = useState(0);\n\n\tuseUpdateEffect(() => {\n\t\tconsole.log("Effect runs on updates only");\n\t}, [count]);\n\n\treturn (\n\t\t<div>\n\t\t\t<p>Count: {count}</p>\n\t\t\t<button onClick={() => setCount(count + 1)}>Increment</button>\n\t\t</div>\n\t);\n}\n'})}),"\n",(0,s.jsx)(t.h3,{id:"api",children:"API"}),"\n",(0,s.jsx)(t.p,{children:"Parameters"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"effect"})," : ",(0,s.jsx)(t.code,{children:"Function"})," - The effect function to run."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"deps"})," : ",(0,s.jsx)(t.code,{children:"DependencyList"})," - The dependencies to watch for changes. The effect will run only when these dependencies change."]}),"\n"]})]})}function l(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>r});var s=n(6540);const o={},c=s.createContext(o);function i(e){const t=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(c.Provider,{value:t},e.children)}}}]);