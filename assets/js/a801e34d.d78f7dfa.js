"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9445],{5544:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>c,toc:()=>a});var o=n(4848),s=n(8453);const r={id:"useMutationObserver",title:"useMutationObserver",sidebar_label:"useMutationObserver"},i=void 0,c={id:"hooks/useMutationObserver",title:"useMutationObserver",description:"Hook to observe changes to a DOM element using MutationObserver.",source:"@site/docs/hooks/useMutationObserver.md",sourceDirName:"hooks",slug:"/hooks/useMutationObserver",permalink:"/react-fast-hooks/docs/hooks/useMutationObserver",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"useMutationObserver",title:"useMutationObserver",sidebar_label:"useMutationObserver"},sidebar:"docsSidebar",previous:{title:"useMouse",permalink:"/react-fast-hooks/docs/hooks/useMouse"},next:{title:"useNotification",permalink:"/react-fast-hooks/docs/hooks/useNotification"}},l={},a=[{value:"Usage",id:"usage",level:3},{value:"API",id:"api",level:3}];function d(e){const t={code:"code",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:"Hook to observe changes to a DOM element using MutationObserver."}),"\n",(0,o.jsx)(t.h3,{id:"usage",children:"Usage"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-jsx",metastring:"live",live:!0,children:"function App() {\n\tconst elementRef = useRef(null);\n\n\tuseMutationObserver(\n\t\telementRef,\n\t\t(mutations) => {\n\t\t\tmutations.forEach((mutation) => {\n\t\t\t\tconsole.log(mutation);\n\t\t\t});\n\t\t},\n\t\t{\n\t\t\tchildList: true,\n\t\t\tattributes: true,\n\t\t}\n\t);\n\n\treturn (\n\t\t<div ref={elementRef}>\n\t\t\t// Try changing the style of this element from the dev tools\n\t\t\t<p>Observe changes to this element</p>\n\t\t</div>\n\t);\n}\n"})}),"\n",(0,o.jsx)(t.h3,{id:"api",children:"API"}),"\n",(0,o.jsx)(t.p,{children:"Parameters:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"ref"})," - The React ref to the element to observe."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"callback"})," - A function to handle mutations."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"options"})," : ",(0,o.jsx)(t.code,{children:"UseMutationObserverOptions"})," - An object specifying which DOM mutations to observe."]}),"\n"]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.code,{children:"UseMutationObserverOptions"})," includes the following properties:"]}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"childList"})," : ",(0,o.jsx)(t.code,{children:"boolean"})," - Set to ",(0,o.jsx)(t.code,{children:"true"})," to observe changes to the children of the target element."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"attributes"})," : ",(0,o.jsx)(t.code,{children:"boolean"})," - Set to ",(0,o.jsx)(t.code,{children:"true"})," to observe changes to the attributes of the target element."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"characterData"})," : ",(0,o.jsx)(t.code,{children:"boolean"})," - Set to ",(0,o.jsx)(t.code,{children:"true"})," to observe changes to the data of the target element."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"subtree"})," : ",(0,o.jsx)(t.code,{children:"boolean"})," - Set to ",(0,o.jsx)(t.code,{children:"true"})," to observe changes to the descendants of the target element."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"attributeOldValue"})," : ",(0,o.jsx)(t.code,{children:"boolean"})," - Set to ",(0,o.jsx)(t.code,{children:"true"})," to record the previous value of attribute mutations."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"characterDataOldValue"})," : ",(0,o.jsx)(t.code,{children:"boolean"})," - Set to ",(0,o.jsx)(t.code,{children:"true"})," to record the previous value of character data mutations."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"attributeFilter"})," : ",(0,o.jsx)(t.code,{children:"string[]"})," - An array of attribute names to observe. If omitted, all attributes will be observed."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"characterDataOldValue"})," : ",(0,o.jsx)(t.code,{children:"boolean"})," - Set to ",(0,o.jsx)(t.code,{children:"true"})," to record the previous value of character data before it was changed."]}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>c});var o=n(6540);const s={},r=o.createContext(s);function i(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);